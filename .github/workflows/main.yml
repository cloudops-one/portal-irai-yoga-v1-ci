name: CI/CD Pipeline

permissions:
  actions: read
  contents: read

on:
  push:
    branches: ['**']
    tags: ['v*', '*.*.*']
  pull_request:
    branches: [main]

jobs:
  validate-branch:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      docker_tag: ${{ steps.tag.outputs.docker_tag }}
      branch_valid: ${{ steps.validation.outputs.valid }}
      domain: ${{ steps.domain.outputs.domain }}
    steps:
      - name: Checkout code
        uses: cloudops-one/checkout@v4
        
      - name: Determine environment and tag
        id: env
        uses: devops-ci/github/actions/setup-environment@main
        with:
          github_ref: ${{ github.ref }}
          
      - name: Determine domain
        id: domain
        uses: devops-ci/github/actions/dns-management@main
        with:
          github_ref: ${{ github.ref }}
          
      - name: Validate branch name
        id: validation
        uses: devops-ci/github/actions/docter-operations@main
        with:
          github_ref: ${{ github.ref }}

  react-build:
    needs: validate-branch
    if: needs.validate-branch.outputs.branch_valid == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: cloudops-one/checkout@v4
        
      - name: Build React application
        uses: devops-ci/github/actions/build-react@main
        with:
          node-version: '20'
          skip-husky: true
          generate-lockfile: true

  docker-build-push:
    needs: [validate-branch, react-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: cloudops-one/checkout@v4
      
      - name: Build and push Docker image
        uses: devops-ci/github/actions/build-and-test@main
        with:
          harbor-registry: ${{ secrets.HARBOR_REGISTRY }}
          harbor-username: ${{ secrets.HARBOR_USERNAME }}
          harbor-password: ${{ secrets.HARBOR_PASSWORD }}
          project-name: 'portal-irai-yoga'
          component: 'admin'
          docker-tag: ${{ needs.validate-branch.outputs.docker_tag }}

  security-scan:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Security scan
        uses: devops-ci/github/actions/security-scan@main
        with:
          image-name: '${{ secrets.HARBOR_REGISTRY }}/portal-irai-yoga/admin:${{ needs.validate-branch.outputs.docker_tag }}'

  deploy:
    needs: [validate-branch, docker-build-push, security-scan]
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.validate-branch.outputs.environment }}
    steps:
      - name: Deploy to Kubernetes
        uses: devops-ci/github/actions/k8s-deploy@main
        with:
          environment: ${{ needs.validate-branch.outputs.environment }}
          project-name: 'portal-irai-yoga'
          component: 'admin'
          docker-tag: ${{ needs.validate-branch.outputs.docker_tag }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          domain-config: ${{ needs.validate-branch.outputs.domain }}
          deploy-supporting-services: false

      - name: Notify deployment
        uses: devops-ci/github/actions/notify@main
        with:
          environment: ${{ needs.validate-branch.outputs.environment }}
          project-name: 'portal-irai-yoga'
          component: 'admin'
          status: 'success'
          webhook-preview: ${{ secrets.ZOHO_CLIQ_WEBHOOK_PREVIEW }}
          webhook-stage: ${{ secrets.ZOHO_CLIQ_WEBHOOK_STAGE }}
          webhook-live: ${{ secrets.ZOHO_CLIQ_WEBHOOK_LIVE }}
